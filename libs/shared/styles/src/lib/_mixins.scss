@use 'variables' as *;
@use 'typography' as *;
@use 'sass:map';

//Typography
@mixin typography() {
  @each $heading, $value in $typography {
    @each $weight, $weight-value in $value {
      @each $device, $props in $weight-value {
        //TODO the values in the map are being duplicated for normal, medium, and bold
        //Create if else where if the weight is normal, medium, or bold you add those classes
        $breakpoint: map.get($breakpoints, $device);
        $font-size: map.get($props, font-size);
        $line-height: map.get($props, line-height);
        $font-weight: map.get($props, font-weight);

        @media (min-width: $breakpoint) {
          .#{$heading}-#{$weight} {
            font-size: $font-size;
            line-height: $line-height;
            font-weight: $font-weight;
            letter-spacing: 1.5px;
          }
        }
      }
    }
  }
}

//Spacing
@mixin padding-classes() {
  @for $i from 0 through 10 {
    .p-#{$i} {
      padding: $i * 1rem;
    }
  }
}

//Responsive
@mixin respond-up($breakpoint) {
  @if $breakpoint == 'md' {
    @media (min-width: 768px) {
      @content;
    }
  }
}
